<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkj.mybatis">
	<update id="updateProductSize" parameterType="ProductSizeDto">
 	  <![CDATA[
    UPDATE PDT_size
    SET pdtcount =
      CASE
        WHEN sizes = 'S' THEN #{pdtCountS}
        WHEN sizes = 'M' THEN #{pdtCountM}
        WHEN sizes = 'L' THEN #{pdtCountL}
        WHEN sizes = 'XL' THEN #{pdtCountXL}
      END
    WHERE pdtid = #{pdtId}
      AND sizes IN ('S', 'M', 'L', 'XL')
  ]]>
	</update>
	<insert id="insertProductSize" parameterType="ProductSizeDto">
		INSERT ALL
		INTO
		PDT_SIZE (pdt_size_id, sizes, pdtcount, pdtid) VALUES
		(seq_pdt_size.nextval, 'S', #{pdtCountS}, seq_product.currval)
		INTO
		PDT_SIZE (pdt_size_id, sizes, pdtcount, pdtid) VALUES
		(seq_pdt_size.nextval+1, 'M', #{pdtCountM}, seq_product.currval)
		INTO
		PDT_SIZE (pdt_size_id, sizes, pdtcount, pdtid) VALUES
		(seq_pdt_size.nextval+2, 'L', #{pdtCountL}, seq_product.currval)
		INTO
		PDT_SIZE (pdt_size_id, sizes, pdtcount, pdtid) VALUES
		(seq_pdt_size.nextval+3, 'XL', #{pdtCountXL}, seq_product.currval)
		SELECT * FROM DUAL
	</insert>

	<select id="selectProductSize" parameterType="int"
		resultType="ProductSizeDto">
		SELECT
		pdt1.pdtcount AS pdtcounts,
		pdt2.pdtcount AS
		pdtcountm,
		pdt3.pdtcount AS pdtcountl,
		pdt4.pdtcount AS pdtcountxl
		FROM
		(SELECT pdtcount FROM PDT_SIZE WHERE pdtid = #{pdtId} AND sizes = 'S')
		pdt1
		CROSS JOIN
		(SELECT pdtcount FROM PDT_SIZE WHERE pdtid = #{pdtId}
		AND sizes = 'M') pdt2
		CROSS JOIN
		(SELECT pdtcount FROM PDT_SIZE WHERE
		pdtid = #{pdtId} AND sizes = 'L') pdt3
		CROSS JOIN
		(SELECT pdtcount FROM
		PDT_SIZE WHERE pdtid = #{pdtId} AND sizes = 'XL') pdt4
	</select>
</mapper>